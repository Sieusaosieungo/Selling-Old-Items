{"version":3,"sources":["pages/PostProduct/index.js"],"names":["Option","Select","TextArea","Input","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","withCookies","Form","create","name","getFieldDecorator","form","cookies","history","useState","categories","setCategories","images","setImages","accessToken","console","log","onChange","e","target","files","useEffect","axios","mehod","url","config","API_URL","headers","authorization","then","res","data","results","catch","err","className","onSubmit","preventDefault","validateFieldsAndScroll","values","formData","FormData","set","category_id","cost","description","append","productMainImage","productAttachImages","method","message","success","push","Item","label","rules","required","type","hasFeedback","placeholder","map","index","_id","key","value","htmlType"],"mappings":"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","file":"static/js/13.99336f51.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withCookies } from 'react-cookie';\nimport axios from 'axios';\nimport { Input, Form, Select, Button, message } from 'antd';\nimport { Redirect } from 'react-router-dom';\n\nimport './style.scss';\n\nimport config from '../../utils/config';\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst prefixCls = 'post-product';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst PostProduct = ({\n  form: { getFieldDecorator },\n  form,\n  cookies: { cookies },\n  history,\n}) => {\n  const [categories, setCategories] = useState([]);\n  const [images, setImages] = useState({});\n\n  const { accessToken } = cookies;\n\n  console.log('history: ', history);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('product before upload:', { ...values, ...images });\n\n        const formData = new FormData();\n        formData.set('name', values.name);\n        formData.set('category_id', values.category_id);\n        formData.set('cost', values.cost);\n        formData.set('description', values.description);\n        formData.append('productMainImage', images.productMainImage);\n        formData.append('productAttachImages', images.productAttachImages);\n\n        axios({\n          method: 'POST',\n          url: `${config.API_URL}/products/`,\n          headers: {\n            authorization: `Bearer ${accessToken}`,\n            'Content-Type': 'multipart/form-data',\n          },\n          data: formData,\n        })\n          .then(res => {\n            if (res.data.results) {\n              console.log('product uploaded: ', res.data);\n              message.success('Đăng sản phẩm thành công !');\n              setImages({});\n              history.push('/user/my-posts');\n            }\n          })\n          .catch(err => console.log(err));\n      }\n    });\n  };\n\n  const onChange = e => {\n    const { name, files } = e.target;\n    setImages({ ...images, [name]: files[0] });\n  };\n\n  useEffect(() => {\n    axios({\n      mehod: 'GET',\n      url: `${config.API_URL}/categories/`,\n      headers: {\n        authorization: `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(res => {\n        if (res.data.results.categories) {\n          setCategories(res.data.results.categories);\n        }\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <div className={`${prefixCls}`}>\n      <Form {...formItemLayout} onSubmit={handleSubmit}>\n        <Form.Item label=\"Tên sản phẩm:\">\n          {getFieldDecorator('name', {\n            rules: [\n              {\n                required: true,\n                message: 'Tên sản phẩm không được để trống',\n              },\n            ],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Ảnh chính:\">\n          <label className=\"upload-btn-wrapper\">\n            <input\n              type=\"file\"\n              required\n              onChange={onChange}\n              name=\"productMainImage\"\n            />\n            <span>Tải lên ảnh</span>\n          </label>\n        </Form.Item>\n        <Form.Item label=\"Ảnh phụ:\">\n          <label className=\"upload-btn-wrapper\">\n            <input\n              type=\"file\"\n              required\n              onChange={onChange}\n              name=\"productAttachImages\"\n            />\n            <span>Tải lên file .zip</span>\n          </label>\n        </Form.Item>\n        <Form.Item label=\"Giá:\">\n          {getFieldDecorator('cost', {\n            rules: [\n              {\n                required: true,\n                message: 'Giá không được để trống !',\n              },\n            ],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Danh mục\" hasFeedback>\n          {getFieldDecorator('category_id', {\n            rules: [{ required: true, message: 'Danh mục không được trống !' }],\n          })(\n            <Select placeholder=\"Chọn danh mục\">\n              {categories.map(({ name, _id }, index) => (\n                <Option key={index} value={_id}>\n                  {name}\n                </Option>\n              ))}\n            </Select>,\n          )}\n        </Form.Item>\n        <Form.Item label=\"Mô tả:\">\n          {getFieldDecorator('description', {\n            rules: [\n              {\n                required: true,\n                message: 'Mô tả không được để trống !',\n              },\n            ],\n          })(<TextArea />)}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Tải lên\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default withCookies(Form.create({ name: 'sign-up' })(PostProduct));\n"],"sourceRoot":""}