{"version":3,"sources":["utils/formatPrice.js","components/ProductItem/index.js","components/Category/index.js"],"names":["numberToNumberWithCommas","x","toString","replace","Meta","Card","ProductItem","_id","name","mainImage","cost","averagePoint","to","className","hoverable","cover","alt","src","config","API_IMAGES","allowHalf","value","style","fontSize","disabled","title","description","connect","global","idCategory","dispatch","tab","timeToUpdateOld","productItems","useEffect","Date","now","TIME_TO_UPDATE","axios","method","url","API_URL","params","category_id","then","res","data","results","products","productsCategory","updateState","catch","err","console","log","result","length","map","productItem","index","key","renderProductItem","defaultCurrent","total"],"mappings":"4GAAA,kCAAO,IAAMA,EAA2B,SAAAC,GACtC,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,O,iCCDvD,wEASQC,EAASC,IAATD,KAwBOE,IApBK,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,IAAKC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,UAAwC,IAA7BC,YAA6B,MAAtB,EAAsB,EAAnBC,EAAmB,EAAnBA,aACrD,OACE,kBAAC,IAAD,CAAMC,GAAE,0BAAqBL,GAAOM,UAAS,UAJ/B,kBAKZ,kBAAC,IAAD,CACEA,UAAS,UANC,gBAMD,SACTC,WAAS,EACTC,MAAO,yBAAKC,IAAKR,EAAMS,IAAG,UAAKC,IAAOC,YAAZ,OAAyBV,MAEnD,kBAAC,IAAD,CACEW,WAAS,EACTC,MAAOV,EACPW,MAAO,CAAEC,SAAU,QACnBC,UAAQ,IAEV,kBAACpB,EAAD,CAAMqB,MAAOjB,EAAMkB,YAAW,UAAK1B,YAAyBU,GAA9B,gB,oLC0CvBiB,uBAJS,SAAC,GACvB,MAAO,CAAEC,OAD6B,EAAbA,UAIZD,EA3CE,SAAC,GAA2C,IAAzCE,EAAwC,EAAxCA,WAAYD,EAA4B,EAA5BA,OAAQE,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,IAAU,EAExDH,EAAO,YAAD,OAAaC,KAAiB,GAFoB,IAClDG,uBADkD,MAChC,EADgC,EAC7BC,EAD6B,EAC7BA,aA4B7B,OAzBAC,qBAAU,WACJC,KAAKC,MAAQJ,GAAmBd,IAAOmB,gBACzCC,IAAM,CACJC,OAAQ,MACRC,IAAI,GAAD,OAAKtB,IAAOuB,QAAZ,aACHC,OAAQ,CACNC,YAAad,KAGde,MAAK,SAAAC,GACJ,GAAIA,EAAIC,KAAKC,QAAQC,SAAU,CAC7B,IAAMC,EAAmB,CACvBjB,gBAAiBG,KAAKC,MACtBH,aAAcY,EAAIC,KAAKC,QAAQC,UAGjClB,EACEoB,YAAY,kCAAerB,GAAeoB,SAI/CE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAE7B,CAACrB,IAGF,yBAAKlB,UAAS,UA5CA,aA6CZ,yBAAKA,UAAS,UA7CF,WA6CE,UA3CM,SAAAoB,GACxB,IAAIsB,EAAS,KAQb,OANItB,GAAgBA,EAAauB,OAAS,IACxCD,EAAStB,EAAawB,KAAI,SAACC,EAAaC,GAAd,OACxB,kBAAC,IAAD,eAAaC,IAAKD,GAAWD,QAI1BH,EAmCAM,CAAkB5B,IAErB,kBAAC,IAAD,CAAY6B,eAAgB,EAAGC,MAAO","file":"static/js/8.e6a1790b.chunk.js","sourcesContent":["export const numberToNumberWithCommas = x => {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n};\r\n\r\nexport const numberWithNonCommasToNumber = x => {\r\n  return x.split(',').join('');\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Rate } from 'antd';\r\n\r\nimport './style.scss';\r\n\r\nimport config from '../../utils/config';\r\nimport { numberToNumberWithCommas } from '../../utils/formatPrice';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst prefixCls = 'category-item';\r\n\r\nconst ProductItem = ({ _id, name, mainImage, cost = 0, averagePoint }) => {\r\n  return (\r\n    <Link to={`/product-detail/${_id}`} className={`${prefixCls}`}>\r\n      <Card\r\n        className={`${prefixCls}-card`}\r\n        hoverable\r\n        cover={<img alt={name} src={`${config.API_IMAGES}${mainImage}`} />}\r\n      >\r\n        <Rate\r\n          allowHalf\r\n          value={averagePoint}\r\n          style={{ fontSize: '15px' }}\r\n          disabled\r\n        />\r\n        <Meta title={name} description={`${numberToNumberWithCommas(cost)}Ä‘`} />\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ProductItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Pagination } from 'antd';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './style.scss';\r\n\r\nimport ProductItem from '../ProductItem';\r\n\r\nimport config from '../../utils/config';\r\nimport { updateState } from '../../actions';\r\n\r\nconst prefixCls = 'category';\r\n\r\nconst renderProductItem = productItems => {\r\n  let result = null;\r\n\r\n  if (productItems && productItems.length > 0) {\r\n    result = productItems.map((productItem, index) => (\r\n      <ProductItem key={index} {...productItem} />\r\n    ));\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst Category = ({ idCategory, global, dispatch, tab }) => {\r\n  const { timeToUpdateOld = 0, productItems } =\r\n    global[`category-${idCategory}`] || {};\r\n\r\n  useEffect(() => {\r\n    if (Date.now() - timeToUpdateOld >= config.TIME_TO_UPDATE) {\r\n      axios({\r\n        method: 'GET',\r\n        url: `${config.API_URL}/products`,\r\n        params: {\r\n          category_id: idCategory,\r\n        },\r\n      })\r\n        .then(res => {\r\n          if (res.data.results.products) {\r\n            const productsCategory = {\r\n              timeToUpdateOld: Date.now(),\r\n              productItems: res.data.results.products,\r\n            };\r\n\r\n            dispatch(\r\n              updateState({ [`category-${idCategory}`]: productsCategory }),\r\n            );\r\n          }\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  }, [tab]);\r\n\r\n  return (\r\n    <div className={`${prefixCls}`}>\r\n      <div className={`${prefixCls}-body`}>\r\n        {renderProductItem(productItems)}\r\n      </div>\r\n      <Pagination defaultCurrent={1} total={21} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ global }) => {\r\n  return { global };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Category);\r\n"],"sourceRoot":""}