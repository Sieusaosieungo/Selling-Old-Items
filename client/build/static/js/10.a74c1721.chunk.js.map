{"version":3,"sources":["utils/formatPrice.js","pages/ProductDetail/index.js"],"names":["numberToNumberWithCommas","x","toString","replace","TextArea","Input","prefixCls","CommentList","comments","dataSource","header","length","itemLayout","renderItem","props","Editor","onChange","onSubmit","submitting","value","Item","rows","htmlType","loading","onClick","type","connect","user","withCookies","id","match","params","cookies","useState","stateComment","setStateComment","productItem","setProductItem","accessToken","useEffect","axios","method","url","config","API_URL","then","res","data","results","product","catch","err","console","log","JSON","stringify","className","infiniteLoop","autoPlay","transitionTime","imageToShows","result","map","imageToShow","index","key","src","API_IMAGES","alt","renderListImage","attachImages","mainImage","name","cost","headers","authorization","product_id","point","allowHalf","averagePoint","description","message","success","warning","comment","avatar","IMAGE_USER_DEFAULT","datetime","moment","Date","fromNow","style","margin","width","borderTop","image","full_name","content","e","target","setTimeout"],"mappings":"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","file":"static/js/10.a74c1721.chunk.js","sourcesContent":["export const numberToNumberWithCommas = x => {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport const numberWithNonCommasToNumber = x => {\n  return x.split(',').join('');\n};\n","import React, { useEffect, Fragment, useState } from 'react';\nimport { withCookies } from 'react-cookie';\nimport moment from 'moment';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Carousel } from 'react-responsive-carousel';\nimport {\n  Comment,\n  Avatar,\n  Form,\n  Button,\n  List,\n  Input,\n  Rate,\n  message,\n} from 'antd';\n\nimport './style.scss';\n\nimport config from '../../utils/config';\nimport Loading from '../../components/Loading';\nimport { numberToNumberWithCommas } from '../../utils/formatPrice';\n\nconst { TextArea } = Input;\n\nconst prefixCls = 'product-detail';\n\nconst CommentList = ({ comments }) => (\n  <List\n    dataSource={comments}\n    header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n    itemLayout=\"horizontal\"\n    renderItem={props => <Comment {...props} />}\n  />\n);\n\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\n  <div>\n    <Form.Item>\n      <TextArea rows={4} onChange={onChange} value={value} />\n    </Form.Item>\n    <Form.Item>\n      <Button\n        htmlType=\"submit\"\n        loading={submitting}\n        onClick={onSubmit}\n        type=\"primary\"\n      >\n        Bình luận\n      </Button>\n    </Form.Item>\n  </div>\n);\n\nconst renderListImage = imageToShows => {\n  let result = null;\n\n  if (imageToShows && imageToShows.length > 0) {\n    result = imageToShows.map((imageToShow, index) => (\n      <div key={index}>\n        <img src={`${config.API_IMAGES}${imageToShow}`} alt=\"Attach image\" />\n      </div>\n    ));\n  }\n\n  return result;\n};\n\nconst ProductDetail = ({\n  match: {\n    params: { id },\n  },\n  cookies,\n  user,\n}) => {\n  const [stateComment, setStateComment] = useState({\n    submitting: false,\n    value: '',\n  });\n  const [productItem, setProductItem] = useState({});\n\n  const { accessToken } = cookies.cookies;\n\n  const handleSubmit = () => {\n    if (!stateComment.value) {\n      return;\n    }\n\n    setStateComment({\n      ...stateComment,\n      submitting: true,\n    });\n\n    setTimeout(() => {\n      setStateComment({\n        submitting: false,\n        value: '',\n      });\n    }, 500);\n\n    axios({\n      method: 'PATCH',\n      url: `${config.API_URL}/products/add-comment`,\n      headers: {\n        authorization: `Bearer ${accessToken}`,\n      },\n      data: {\n        product_id: id,\n        content: stateComment.value,\n        datetime: new Date(),\n      },\n    })\n      .then(res => {\n        setProductItem(res.data.results.product);\n      })\n      .catch(err => console.log(err));\n  };\n\n  const handleChange = e => {\n    setStateComment({\n      ...stateComment,\n      value: e.target.value,\n    });\n  };\n\n  const handleRate = value => {\n    axios({\n      method: 'PATCH',\n      url: `${config.API_URL}/products/rating`,\n      headers: {\n        authorization: `Bearer ${accessToken}`,\n      },\n      data: {\n        product_id: id,\n        point: value,\n      },\n    })\n      .then(res => {\n        setProductItem(res.data.results.product);\n      })\n      .catch(err => console.log(err));\n  };\n\n  const handleAddToCart = () => {\n    axios({\n      method: 'POST',\n      url: `${config.API_URL}/products/add-to-cart`,\n      headers: {\n        authorization: `Bearer ${accessToken}`,\n      },\n      data: {\n        product_id: id,\n      },\n    })\n      .then(res => {\n        message.success(`Thêm sản phẩm vào giỏ hàng thành công !`);\n      })\n      .catch(err => {\n        if (accessToken) {\n          message.warning('Sản phẩm đã có trong giỏ hàng !');\n        } else {\n          message.warning('Cần đăng nhập để thêm vào giỏ hàng !');\n        }\n      });\n  };\n\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: `${config.API_URL}/products/${id}`,\n    })\n      .then(res => {\n        if (res.data.results.product) {\n          setProductItem(res.data.results.product);\n        }\n      })\n      .catch(err => console.log(err));\n  }, [id]);\n\n  if (JSON.stringify({}) !== JSON.stringify(productItem)) {\n    return (\n      <Fragment>\n        <div className={`${prefixCls}`}>\n          <div className={`${prefixCls}-image`}>\n            <Carousel infiniteLoop autoPlay transitionTime>\n              {renderListImage([\n                ...productItem.attachImages,\n                productItem.mainImage,\n              ])}\n            </Carousel>\n          </div>\n          <div className={`${prefixCls}-info`}>\n            <div className={`${prefixCls}-title`}>{productItem.name}</div>\n            <div className={`${prefixCls}-price`}>{`${numberToNumberWithCommas(\n              productItem.cost,\n            )}đ`}</div>\n            <div className={`${prefixCls}-rate`}>\n              <Rate\n                onChange={handleRate}\n                allowHalf\n                value={productItem.averagePoint}\n              />\n            </div>\n            <div className={`${prefixCls}-description`}>\n              <span>Mô tả:</span>\n              <p>{productItem.description}</p>\n            </div>\n            <div className={`${prefixCls}-quantity`}>\n              <Button onClick={handleAddToCart} type=\"primary\">\n                Thêm vào giỏ\n              </Button>\n            </div>\n          </div>\n          <div className={`${prefixCls}-comment`}>\n            {productItem.comments.length > 0 ? (\n              <CommentList\n                comments={productItem.comments.map(comment => ({\n                  ...comment,\n                  avatar: comment.avatar || config.IMAGE_USER_DEFAULT,\n                  datetime: moment(new Date(comment.datetime)).fromNow(),\n                }))}\n              />\n            ) : (\n              <div\n                style={{\n                  margin: '2rem auto 3rem',\n                  width: '80%',\n                  borderTop: '1px solid rgb(202, 202, 202)',\n                }}\n              ></div>\n            )}\n            <Comment\n              avatar={\n                <Avatar\n                  src={user.image || config.IMAGE_USER_DEFAULT}\n                  alt={user.full_name}\n                />\n              }\n              content={\n                <Editor\n                  onChange={handleChange}\n                  onSubmit={handleSubmit}\n                  submitting={stateComment.submitting}\n                  value={stateComment.value}\n                />\n              }\n            />\n          </div>\n        </div>\n      </Fragment>\n    );\n  } else {\n    return <Loading />;\n  }\n};\n\nconst mapStateToProps = ({ user }) => {\n  return { user };\n};\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(withCookies(ProductDetail));\n"],"sourceRoot":""}