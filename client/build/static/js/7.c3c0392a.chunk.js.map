{"version":3,"sources":["utils/formatPrice.js","components/ProductItem/index.js","components/CategoryCard/index.js"],"names":["numberToNumberWithCommas","x","toString","replace","Meta","Card","ProductItem","_id","name","mainImage","cost","averagePoint","to","className","hoverable","cover","alt","src","config","API_IMAGES","allowHalf","value","style","fontSize","disabled","title","description","renderCategory","categoryHome","result","length","map","index","titleCategory","productItems","key","productItem","renderProductItem","connect","global","dispatch","productsLatest","productsRateHigh","timeToUpdateOld","products","useEffect","Date","now","TIME_TO_UPDATE","axios","method","url","API_URL","params","number","then","res","data","results","setProductsLatest","updateState","catch","err","console","log"],"mappings":"4GAAA,kCAAO,IAAMA,EAA2B,SAAAC,GACtC,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,O,iCCDvD,wEASQC,EAASC,IAATD,KAwBOE,IApBK,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,IAAKC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,UAAwC,IAA7BC,YAA6B,MAAtB,EAAsB,EAAnBC,EAAmB,EAAnBA,aACrD,OACE,kBAAC,IAAD,CAAMC,GAAE,0BAAqBL,GAAOM,UAAS,UAJ/B,kBAKZ,kBAAC,IAAD,CACEA,UAAS,UANC,gBAMD,SACTC,WAAS,EACTC,MAAO,yBAAKC,IAAKR,EAAMS,IAAG,UAAKC,IAAOC,YAAZ,OAAyBV,MAEnD,kBAAC,IAAD,CACEW,WAAS,EACTC,MAAOV,EACPW,MAAO,CAAEC,SAAU,QACnBC,UAAQ,IAEV,kBAACpB,EAAD,CAAMqB,MAAOjB,EAAMkB,YAAW,UAAK1B,YAAyBU,GAA9B,gB,6EC3BtC,uGA0BMiB,EAAiB,SAAAC,GACrB,IAAIC,EAAS,KAYb,OARID,GAAgBA,EAAaE,OAAS,IACxCD,EAASD,EAAaG,KAAI,WAAsCC,GAAtC,IAAGC,EAAH,EAAGA,cAAerB,EAAlB,EAAkBA,GAAIsB,EAAtB,EAAsBA,aAAtB,OACxB,kBAAC,IAAD,CAAMC,IAAKH,EAAOP,MAAO,kBAAC,IAAD,CAAMb,GAAIA,GAAKqB,IAnBpB,SAAAC,GACxB,IAAIL,EAAS,KAQb,OANIK,GAAgBA,EAAaJ,OAAS,IACxCD,EAASK,EAAaH,KAAI,SAACK,EAAaJ,GAAd,OACxB,kBAAC,IAAD,eAAaG,IAAKH,GAAWI,QAI1BP,EAWAQ,CAAkBH,QAKlBL,GAoFMS,uBANS,SAAC,GACvB,MAAO,CACLC,OAFoC,EAAbA,UAMZD,EAjFM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACxBC,EAAiBF,EAAM,mBAAyB,GAChDG,EAAmBH,EAAM,kBAAwB,GAI/CI,GAAoBJ,EAAM,cAAoB,IAA9CI,gBAEFf,EAAe,CACnB,CACEK,cAAe,wCACfrB,GAAI,qBACJsB,aAAcO,EAAeG,UAE/B,CACEX,cAAe,iEACfrB,GAAI,8BACJsB,aAAcQ,EAAiBE,WAuDnC,OAnDAC,qBAAU,aAELF,GACDG,KAAKC,MAAQJ,GAAmBzB,IAAO8B,kBAEvCC,IAAM,CACJC,OAAQ,MACRC,IAAI,GAAD,OAAKjC,IAAOkC,QAAZ,eACHC,OAAQ,CAAEC,OAAQ,MAEjBC,MAAK,SAAAC,GACJ,GAAIA,EAAIC,KAAKC,QAAQd,SAAU,CAC7B,IAAMe,EAAoB,CACxBf,SAAUY,EAAIC,KAAKC,QAAQd,SAC3BD,gBAAiBG,KAAKC,OAGxBP,EACEoB,YAAY,CACVD,2BAKPE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAE5Bb,IAAM,CACJC,OAAQ,MACRC,IAAI,GAAD,OAAKjC,IAAOkC,QAAZ,aACHC,OAAQ,CACNC,OAAQ,MAGTC,MAAK,SAAAC,GACJ,GAAIA,EAAIC,KAAKC,QAAQd,SAAU,CAC7B,IAAMF,EAAmB,CACvBE,SAAUY,EAAIC,KAAKC,QAAQd,SAC3BD,gBAAiBG,KAAKC,OAGxBP,EACEoB,YAAY,CACVlB,0BAKPmB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SAE7B,IAEI,yBAAKjD,UAAS,UAtGL,kBAsGwBc,EAAeC","file":"static/js/7.c3c0392a.chunk.js","sourcesContent":["export const numberToNumberWithCommas = x => {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n};\r\n\r\nexport const numberWithNonCommasToNumber = x => {\r\n  return x.split(',').join('');\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Rate } from 'antd';\r\n\r\nimport './style.scss';\r\n\r\nimport config from '../../utils/config';\r\nimport { numberToNumberWithCommas } from '../../utils/formatPrice';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst prefixCls = 'category-item';\r\n\r\nconst ProductItem = ({ _id, name, mainImage, cost = 0, averagePoint }) => {\r\n  return (\r\n    <Link to={`/product-detail/${_id}`} className={`${prefixCls}`}>\r\n      <Card\r\n        className={`${prefixCls}-card`}\r\n        hoverable\r\n        cover={<img alt={name} src={`${config.API_IMAGES}${mainImage}`} />}\r\n      >\r\n        <Rate\r\n          allowHalf\r\n          value={averagePoint}\r\n          style={{ fontSize: '15px' }}\r\n          disabled\r\n        />\r\n        <Meta title={name} description={`${numberToNumberWithCommas(cost)}đ`} />\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ProductItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './style.scss';\r\n\r\nimport config from '../../utils/config';\r\nimport { updateState } from '../../actions';\r\nimport ProductItem from '../ProductItem';\r\n\r\nconst prefixCls = 'category-card';\r\n\r\nconst renderProductItem = productItems => {\r\n  let result = null;\r\n\r\n  if (productItems && productItems.length > 0) {\r\n    result = productItems.map((productItem, index) => (\r\n      <ProductItem key={index} {...productItem} />\r\n    ));\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst renderCategory = categoryHome => {\r\n  let result = null;\r\n\r\n  // console.log(categoryHome);\r\n\r\n  if (categoryHome && categoryHome.length > 0) {\r\n    result = categoryHome.map(({ titleCategory, to, productItems }, index) => (\r\n      <Card key={index} title={<Link to={to}>{titleCategory}</Link>}>\r\n        {renderProductItem(productItems)}\r\n      </Card>\r\n    ));\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst CategoryCard = ({ global, dispatch }) => {\r\n  const productsLatest = global['setProductsLatest'] || [];\r\n  const productsRateHigh = global['productsRateHigh'] || [];\r\n\r\n  // console.log(productsRateHigh);\r\n\r\n  const { timeToUpdateOld } = global['categoryHome'] || {};\r\n\r\n  const categoryHome = [\r\n    {\r\n      titleCategory: 'Sản phẩm mới nhất',\r\n      to: '/san-pham-moi-nhat',\r\n      productItems: productsLatest.products,\r\n    },\r\n    {\r\n      titleCategory: 'Sản phẩm được đánh giá cao',\r\n      to: '/san-pham-duoc-danh-gia-cao',\r\n      productItems: productsRateHigh.products,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !timeToUpdateOld ||\r\n      Date.now() - timeToUpdateOld >= config.TIME_TO_UPDATE\r\n    ) {\r\n      axios({\r\n        method: 'GET',\r\n        url: `${config.API_URL}/top/newest`,\r\n        params: { number: 12 },\r\n      })\r\n        .then(res => {\r\n          if (res.data.results.products) {\r\n            const setProductsLatest = {\r\n              products: res.data.results.products,\r\n              timeToUpdateOld: Date.now(),\r\n            };\r\n\r\n            dispatch(\r\n              updateState({\r\n                setProductsLatest,\r\n              }),\r\n            );\r\n          }\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n      axios({\r\n        method: 'GET',\r\n        url: `${config.API_URL}/top/rate`,\r\n        params: {\r\n          number: 12,\r\n        },\r\n      })\r\n        .then(res => {\r\n          if (res.data.results.products) {\r\n            const productsRateHigh = {\r\n              products: res.data.results.products,\r\n              timeToUpdateOld: Date.now(),\r\n            };\r\n\r\n            dispatch(\r\n              updateState({\r\n                productsRateHigh,\r\n              }),\r\n            );\r\n          }\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  }, []);\r\n\r\n  return <div className={`${prefixCls}`}>{renderCategory(categoryHome)}</div>;\r\n};\r\n\r\nconst mapStateToProps = ({ global }) => {\r\n  return {\r\n    global,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CategoryCard);\r\n"],"sourceRoot":""}